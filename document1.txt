def partition(l, r, nums):
    # Last element will be the pivot and the first element the pointer
    pivot, ptr = nums[r], l
    for i in range(l, r):
        if nums[i] <= pivot:

 
 
def quicksort(l, r, nums):
    if len(nums) == 1:  # Terminating Condition for recursion. VERY IMPORTANT!
        return nums
    if l < r:
        pi = partition(l, r, nums)
        quicksort(l, pi-1, nums)  # Recursively sorting the left values
        quicksort(pi+1, r, nums)  # Recursively sorting the right values
    return nums
 
 
example = [4, 5, 1, 2, 3, 111, 22222, 3333333, 444444]
result = [1, 2, 3, 4, 5]
print(quicksort(0, len(example)-1, example))
 
example = [2, 5]
result = [1]
# As you can see, it works for duplicates too
print(quicksort(0, len(example)-1, example))
